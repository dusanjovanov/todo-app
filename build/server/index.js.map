{"version":3,"sources":["../../client/src/redux/hooks.ts","../../client/src/redux/actionCreators.ts","../../client/src/components/AddTodoForm.tsx","../../client/src/components/Todo.tsx","../../client/src/components/TodoList.tsx","../../client/src/components/Filter.tsx","../../client/src/components/Filters.tsx","../../client/src/components/App.tsx","../todos.json","../../client/src/redux/reducer.ts","index.tsx"],"names":["module","exports","id","text","isDone"],"mappings":"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","file":"index.js","sourceRoot":"..\\..\\server\\src","sourcesContent":["import {\r\n  TypedUseSelectorHook,\r\n  useDispatch as udo,\r\n  useSelector as uso\r\n} from \"react-redux\";\r\nimport { Dispatch } from \"redux\";\r\nimport { State } from \"./reducer\";\r\nimport { RootAction } from \"./actionTypes\";\r\n\r\nexport const useSelector: TypedUseSelectorHook<State> = uso;\r\nexport const useDispatch = () => udo<Dispatch<RootAction>>();\r\n","import { createAsyncAction, createStandardAction } from \"typesafe-actions\";\r\nimport { Todo } from \"../types\";\r\nimport { Filter } from \"./../types\";\r\n\r\nexport const setFilter = createStandardAction(\"SET_FILTER\")<Filter>();\r\n\r\nexport const addTodoActions = createAsyncAction(\r\n  \"ADD_TODO_REQUEST\",\r\n  \"ADD_TODO_SUCCESS\",\r\n  \"ADD_TODO_FAILURE\"\r\n)<undefined, Todo, string>();\r\n\r\nexport const addTodo = (text: string) => dispatch => {\r\n  dispatch(addTodoActions.request());\r\n  fetch(\"http://localhost:5000/api/todos\", {\r\n    method: \"POST\",\r\n    headers: {\r\n      Accept: \"application/json\",\r\n      \"Content-Type\": \"application/json\"\r\n    },\r\n    body: JSON.stringify({ text })\r\n  })\r\n    .then(res => {\r\n      if (res.ok) {\r\n        res.json().then(todo => dispatch(addTodoActions.success(todo)));\r\n      } else {\r\n        dispatch(addTodoActions.failure(res.statusText));\r\n      }\r\n    })\r\n    .catch(err => console.log(err));\r\n};\r\n\r\nexport const toggleTodoActions = createAsyncAction(\r\n  \"TOGGLE_TODO_REQUEST\",\r\n  \"TOGGLE_TODO_SUCCESS\",\r\n  \"TOGGLE_TODO_FAILURE\"\r\n)<undefined, number, string>();\r\n\r\nexport const toggleTodo = (id: number) => dispatch => {\r\n  dispatch(toggleTodoActions.request());\r\n  fetch(`http://localhost:5000/api/todos/${id}/toggle`, {\r\n    method: \"PATCH\",\r\n    headers: {\r\n      Accept: \"application/json\",\r\n      \"Content-Type\": \"application/json\"\r\n    }\r\n  })\r\n    .then(res => {\r\n      if (res.ok) {\r\n        res.json().then(id => dispatch(toggleTodoActions.success(id)));\r\n      } else {\r\n        dispatch(toggleTodoActions.failure(res.statusText));\r\n      }\r\n    })\r\n    .catch(err => console.log(err));\r\n};\r\n\r\nexport const deleteTodoActions = createAsyncAction(\r\n  \"DELETE_TODO_REQUEST\",\r\n  \"DELETE_TODO_SUCCESS\",\r\n  \"DELETE_TODO_FAILURE\"\r\n)<undefined, number, string>();\r\n\r\nexport const deleteTodo = (id: number) => dispatch => {\r\n  dispatch(deleteTodoActions.request());\r\n  fetch(`http://localhost:5000/api/todos/${id}`, {\r\n    method: \"DELETE\",\r\n    headers: {\r\n      Accept: \"application/json\",\r\n      \"Content-Type\": \"application/json\"\r\n    }\r\n  })\r\n    .then(res => {\r\n      if (res.ok) {\r\n        res.json().then(id => dispatch(deleteTodoActions.success(id)));\r\n      } else {\r\n        dispatch(deleteTodoActions.failure(res.statusText));\r\n      }\r\n    })\r\n    .catch(err => console.log(err));\r\n};\r\n","import React, { ChangeEvent, KeyboardEvent, useState } from \"react\";\r\nimport * as Actions from \"../redux/actionCreators\";\r\nimport { useDispatch } from \"../redux/hooks\";\r\n\r\nconst AddTodoForm = () => {\r\n  const [value, setValue] = useState(\"\");\r\n  const dispatch = useDispatch();\r\n\r\n  const addTodo = () => {\r\n    // validation\r\n    if (value.length > 0) {\r\n      Actions.addTodo(value)(dispatch);\r\n      setValue(\"\");\r\n    }\r\n  };\r\n\r\n  const onClickAdd = () => addTodo();\r\n\r\n  const onChange = (e: ChangeEvent<HTMLInputElement>) =>\r\n    setValue(e.currentTarget.value);\r\n\r\n  const onKeyDown = (e: KeyboardEvent) => {\r\n    if (e.keyCode === 13) {\r\n      addTodo();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"add-todo\">\r\n      <input\r\n        className=\"add-todo__input\"\r\n        type=\"text\"\r\n        value={value}\r\n        onChange={onChange}\r\n        onKeyDown={onKeyDown}\r\n        placeholder=\"New Todo\"\r\n      />\r\n      <button\r\n        className=\"add-todo__button\"\r\n        onClick={onClickAdd}\r\n        title=\"Add todo\"\r\n      >\r\n        ➕\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddTodoForm;\r\n","import React, { MouseEvent } from \"react\";\r\nimport { Todo } from \"../types\";\r\nimport classnames from \"classnames\";\r\nimport { useDispatch } from \"../redux/hooks\";\r\nimport * as Actions from \"../redux/actionCreators\";\r\n\r\ntype Props = {\r\n  todo: Todo;\r\n};\r\n\r\nconst Todo = ({ todo }: Props) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const onClickText = (e: MouseEvent) => {\r\n    Actions.toggleTodo(Number(e.currentTarget.getAttribute(\"data-id\")))(\r\n      dispatch\r\n    );\r\n  };\r\n\r\n  const onClickDelete = (e: MouseEvent) => {\r\n    Actions.deleteTodo(Number(e.currentTarget.getAttribute(\"data-id\")))(\r\n      dispatch\r\n    );\r\n  };\r\n\r\n  return (\r\n    <li className=\"todo-item\">\r\n      <div\r\n        className={classnames(\"todo-item__text\", {\r\n          \"todo-item__text--done\": todo.isDone\r\n        })}\r\n        title={todo.text}\r\n        onClick={onClickText}\r\n        data-id={todo.id}\r\n      >\r\n        {todo.text}\r\n      </div>\r\n      <div\r\n        className=\"todo-item__delete\"\r\n        onClick={onClickDelete}\r\n        title=\"Delete todo\"\r\n        data-id={todo.id}\r\n      >\r\n        🗑️\r\n      </div>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default Todo;\r\n","import React, { useMemo } from \"react\";\r\nimport { useSelector } from \"../redux/hooks\";\r\nimport Todo from \"./Todo\";\r\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\r\n\r\nconst TodoList = () => {\r\n  const todos = useSelector(state => state.todos);\r\n  const filter = useSelector(state => state.filter);\r\n\r\n  const filteredTodos = useMemo(() => {\r\n    return todos.filter(t => {\r\n      if (filter === \"completed\") return t.isDone;\r\n      if (filter === \"not completed\") return !t.isDone;\r\n      else return true;\r\n    });\r\n  }, [filter, todos]);\r\n\r\n  return (\r\n    <ul className=\"todo-list\">\r\n      <TransitionGroup>\r\n        {filteredTodos.map(todo => (\r\n          <CSSTransition key={todo.id} classNames=\"todo-item\" timeout={500}>\r\n            <Todo todo={todo} />\r\n          </CSSTransition>\r\n        ))}\r\n      </TransitionGroup>\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default TodoList;\r\n","import React, { MouseEvent } from \"react\";\r\nimport { Filter } from \"../types\";\r\n\r\ntype Props = {\r\n  filter: Filter;\r\n  onClick: (e: MouseEvent) => void;\r\n  currentFilter: Filter;\r\n};\r\n\r\nconst Filter = ({ filter, onClick, currentFilter }: Props) => {\r\n  const text = filter[0].toUpperCase() + filter.slice(1);\r\n\r\n  return (\r\n    <div onClick={onClick}>\r\n      {currentFilter === filter ? <strong>{text}</strong> : text}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n","import React from \"react\";\r\nimport { useSelector, useDispatch } from \"../redux/hooks\";\r\nimport Filter from \"./Filter\";\r\nimport { Filter as FilterType } from \"../types\";\r\nimport { setFilter } from \"../redux/actionCreators\";\r\n\r\nconst filterStrings: FilterType[] = [\"all\", \"completed\", \"not completed\"];\r\n\r\nconst Filters = () => {\r\n  const currentFilter = useSelector(state => state.filter);\r\n  const dispatch = useDispatch();\r\n\r\n  const onClick = filter => () => dispatch(setFilter(filter));\r\n\r\n  return (\r\n    <div className=\"filters\">\r\n      <div className=\"filters__text\">Filters:</div>\r\n      {filterStrings.map(f => (\r\n        <Filter\r\n          key={f}\r\n          filter={f}\r\n          currentFilter={currentFilter}\r\n          onClick={onClick(f)}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Filters;\r\n","import classnames from \"classnames\";\r\nimport React from \"react\";\r\nimport { useSelector } from \"../redux/hooks\";\r\nimport AddTodoForm from \"./AddTodoForm\";\r\nimport TodoList from \"./TodoList\";\r\nimport Filters from \"./Filters\";\r\n\r\nconst App = () => {\r\n  const isLoading = useSelector(state => state.isLoading);\r\n\r\n  return (\r\n    <div className=\"content\">\r\n      <h1 className=\"title\">Todo app</h1>\r\n      <AddTodoForm />\r\n      <Filters />\r\n      <TodoList />\r\n      <div className=\"footer\">Built by Dušan Jovanov 💻| MIT</div>\r\n      <div className={classnames(\"loader\", { \"loader--visible\": isLoading })} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","module.exports=[{id:1,text:\"Learn React\",isDone:!0},{id:2,text:\"Make the Chrome T-Rex game\",isDone:!1},{id:3,text:\"Make the Todo App\",isDone:!1}];","import { Todo, Filter } from \"../types\";\r\nimport { RootAction } from \"./actionTypes\";\r\nimport {\r\n  addTodoActions,\r\n  toggleTodoActions,\r\n  deleteTodoActions,\r\n  setFilter\r\n} from \"./actionCreators\";\r\nimport { getType } from \"typesafe-actions\";\r\nimport todos from \"../../../server/todos.json\";\r\n\r\nexport type State = {\r\n  todos: Todo[];\r\n  isLoading: boolean;\r\n  filter: Filter;\r\n};\r\n\r\nexport const initState: State = {\r\n  todos,\r\n  isLoading: false,\r\n  filter: \"all\"\r\n};\r\n\r\nconst reducer = (state: State = initState, action: RootAction) => {\r\n  switch (action.type) {\r\n    case getType(addTodoActions.success): {\r\n      return {\r\n        ...state,\r\n        todos: [...state.todos, action.payload],\r\n        isLoading: false\r\n      };\r\n    }\r\n    case getType(toggleTodoActions.success): {\r\n      return {\r\n        ...state,\r\n        todos: state.todos.map(todo =>\r\n          todo.id === action.payload ? { ...todo, isDone: !todo.isDone } : todo\r\n        )\r\n      };\r\n    }\r\n    case getType(deleteTodoActions.success): {\r\n      return {\r\n        ...state,\r\n        todos: state.todos.filter(todo => todo.id !== action.payload)\r\n      };\r\n    }\r\n    case getType(setFilter): {\r\n      return {\r\n        ...state,\r\n        filter: action.payload\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import express from \"express\";\r\nimport { body, param, validationResult } from \"express-validator\";\r\nimport React from \"react\";\r\nimport { renderToString } from \"react-dom/server\";\r\nimport { Provider } from \"react-redux\";\r\nimport { createStore } from \"redux\";\r\nimport App from \"../../client/src/components/App\";\r\nimport reducer from \"../../client/src/redux/reducer\";\r\nimport todos from \"../todos.json\";\r\nimport fs from \"fs\";\r\nimport path from \"path\";\r\nimport cheerio from \"cheerio\";\r\n\r\nconst PORT = process.env.PORT || 5000;\r\n\r\nconst db = { todos };\r\nlet nextId = 4;\r\n\r\nconst app = express();\r\n\r\napp.use(express.json());\r\n\r\nlet clientFilesPath: string;\r\n\r\nif (process.env.NODE_ENV === \"DEVELOPMENT\") {\r\n  clientFilesPath = path.resolve(__dirname, \"../../dist/client\");\r\n} else {\r\n  clientFilesPath = path.resolve(__dirname, \"../../build/client\");\r\n}\r\n\r\napp.use(\"/static\", express.static(clientFilesPath));\r\n\r\napp.get(\"/\", (req, res) => {\r\n  const store = createStore(reducer);\r\n\r\n  const preloadedState = store.getState();\r\n\r\n  const reactHtml = renderToString(\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  );\r\n\r\n  const templateFile = fs.readFileSync(\r\n    path.resolve(clientFilesPath, \"index.html\")\r\n  );\r\n  const templateHtml = templateFile.toString();\r\n\r\n  const scriptPreloadedState = `<script>\r\n  window.__PRELOADED_STATE__ = ${JSON.stringify(preloadedState).replace(\r\n    /</g,\r\n    \"\\\\u003c\"\r\n  )}\r\n  </script>`;\r\n\r\n  const $ = cheerio.load(templateHtml);\r\n  $(\"head\").append(scriptPreloadedState);\r\n  $(\"#root\").html(reactHtml);\r\n\r\n  res.send($.html());\r\n});\r\n\r\napp.get(\"/api/todos\", (req, res) => {\r\n  res.send(db.todos);\r\n});\r\n\r\nconst sendErrors = (req, res, next) => {\r\n  const errors = validationResult(req);\r\n  if (!errors.isEmpty()) {\r\n    return res.status(422).json({ errors: errors.array() });\r\n  } else {\r\n    next();\r\n  }\r\n};\r\n\r\napp.post(\r\n  \"/api/todos\",\r\n  [\r\n    body(\"text\")\r\n      .isString()\r\n      .isLength({ min: 1 }),\r\n    sendErrors\r\n  ],\r\n  (req, res) => {\r\n    const todo = {\r\n      id: nextId++,\r\n      text: req.body.text,\r\n      isDone: false\r\n    };\r\n    db.todos.push(todo);\r\n    res.json(todo);\r\n  }\r\n);\r\n\r\napp.patch(\r\n  \"/api/todos/:id/toggle\",\r\n  [param(\"id\").isNumeric(), sendErrors],\r\n  (req, res) => {\r\n    const id = Number(req.params.id);\r\n    db.todos = db.todos.map(t =>\r\n      t.id === id ? { ...t, isDone: !t.isDone } : t\r\n    );\r\n    res.json(id);\r\n  }\r\n);\r\n\r\napp.delete(\r\n  \"/api/todos/:id\",\r\n  [param(\"id\").isNumeric(), sendErrors],\r\n  (req, res) => {\r\n    const id = Number(req.params.id);\r\n    db.todos = todos.filter(t => t.id !== id);\r\n    res.json(id);\r\n  }\r\n);\r\n\r\napp.listen(PORT, () => console.log(`Listening on port ${PORT}`));\r\n"]}